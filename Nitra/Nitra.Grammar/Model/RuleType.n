using Nitra.Model;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Typing
{
  [StructuralEquality]
  public variant RuleType
  {
    | List   { Type    : RuleType; }
    | Option { Type    : RuleType; }
    | Tuple  { Types   : list[RuleType]; }
    | Ref    { Symbol  : SyntaxRuleSymbol; }
    | Chars  { Keyword : option[string]; }
    | Void

    public override ToString() : string
    {
      match (this)
      {
        | List(ty)     => $<#List[$ty]#>
        | Option(ty)   => $<#$ty?#>
        | Tuple(types) => $<#(..$types)#>
        | Ref(symbol)  => symbol.FullName
        | Chars(None)  => "Token"
        | Chars(Some)  => "Keyword"
        | Void         => "Void"
      }
    }
  }
}
