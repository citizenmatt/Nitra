using Nitra.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Typing
{
  public class RuleAliasContext : SimpleNameContext[RuleAliasSymbol], IRuleAliasMapContext
  {
    public RuleAlias    : RuleAliasSymbol { get; }
    public override SymbolMap : Map[string, RuleAliasSymbol] implements IRuleAliasMapContext.RuleAliasMap
    {
      [Memoize] get
      {
        GetParent.[IRuleAliasMapContext]().RuleAliasMap.Replace(RuleAlias.Name, RuleAlias)
      }
    }

    public this(parent : Context, ruleAlias : RuleAliasSymbol)
    {
      base(parent);
      RuleAlias  = ruleAlias;
    }

    public override ToString() : string
    {
      "alias " + RuleAlias.Name + " = " + RuleAlias.Rule
    }
  }

  public interface IRuleAliasMapContext : IContext
  {
    RuleAliasMap : Map[string, RuleAliasSymbol] { get; }
  }
}
